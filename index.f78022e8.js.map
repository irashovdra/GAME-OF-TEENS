{"mappings":"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","sources":["<anon>","src/index.js","src/js/header.js","src/js/quiz.js","src/js/word-scramble.js","src/js/fill-in.js","src/js/match.js","src/js/guess.js","src/js/registration.js","src/js/footer.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    const menuIcon = document.querySelector(\".header-menu-icon\");\n    const headerList = document.querySelector(\".header-list\");\n    menuIcon.addEventListener(\"click\", function() {\n        menuIcon.classList.toggle(\"active\");\n        headerList.classList.toggle(\"active\");\n    });\n});\n\n\nconst $13146f66d2c488bd$var$checkBtn = document.querySelector(\".submit-btn\");\nconst $13146f66d2c488bd$var$resultElement = document.querySelector(\".result\");\n$13146f66d2c488bd$var$checkBtn.addEventListener(\"click\", function() {\n    const answers = document.querySelectorAll('.answers input[type=\"radio\"]:checked');\n    let score = 0;\n    const correctAnswers = [\n        \"a\",\n        \"b\",\n        \"a\",\n        \"b\",\n        \"b\",\n        \"b\"\n    ];\n    answers.forEach((answer, index)=>{\n        if (answer.value === correctAnswers[index]) score++;\n    });\n    $13146f66d2c488bd$var$resultElement.textContent = `You scored ${score} out of 6 points!`;\n    if (score === 6) $13146f66d2c488bd$var$resultElement.style.color = \"green\";\n    else if (score >= 4) $13146f66d2c488bd$var$resultElement.style.color = \"orange\";\n    else $13146f66d2c488bd$var$resultElement.style.color = \"red\";\n});\n\n\nclass $ecc5528c38753e51$var$WordScrambleGame {\n    constructor(words){\n        this.words = words;\n        this.currentWordIndex = 0;\n        this.correctGuesses = 0;\n        this.scrambledWordElement = document.querySelector(\".word-scramble__word\");\n        this.hintElement = document.querySelector(\".word-scramble__hint span\");\n        this.guessInputElement = document.querySelector(\".word-scramble__input\");\n        this.scoreElement = document.querySelector(\".word-scramble__score\");\n        this.refreshButton = document.querySelector(\".refresh-word\");\n        this.checkButton = document.querySelector(\".check-word\");\n        this.init();\n    }\n    init() {\n        this.refreshButton.addEventListener(\"click\", ()=>this.refreshWord());\n        this.checkButton.addEventListener(\"click\", ()=>this.checkGuess());\n        this.nextWord();\n    }\n    scrambleWord(word) {\n        return word.split(\"\").sort(()=>0.5 - Math.random()).join(\"\");\n    }\n    nextWord() {\n        if (this.currentWordIndex >= this.words.length) {\n            this.showFinalScore();\n            return;\n        }\n        const current = this.words[this.currentWordIndex];\n        this.scrambledWordElement.textContent = this.scrambleWord(current.word);\n        this.hintElement.textContent = current.hint;\n        this.guessInputElement.value = \"\";\n        this.currentWordIndex++;\n    }\n    refreshWord() {\n        const current = this.words[this.currentWordIndex - 1];\n        this.scrambledWordElement.textContent = this.scrambleWord(current.word);\n        this.guessInputElement.value = \"\";\n    }\n    checkGuess() {\n        const guess = this.guessInputElement.value.trim().toLowerCase();\n        const currentWord = this.words[this.currentWordIndex - 1].word.toLowerCase();\n        if (guess === currentWord) {\n            this.correctGuesses++;\n            this.displayMessage(\"Correct!\", true);\n        } else this.displayMessage(`Wrong! The correct word was \"${currentWord}\".`, false);\n        this.updateScore();\n        this.nextWord();\n    }\n    updateScore() {\n        this.scoreElement.textContent = this.correctGuesses;\n    }\n    displayMessage(message, isCorrect) {\n        if (isCorrect) alert(message);\n        else alert(message);\n    }\n    showFinalScore() {\n        this.scrambledWordElement.textContent = \"Game Over!\";\n        this.hintElement.textContent = \"\";\n        this.guessInputElement.style.display = \"none\";\n        this.refreshButton.style.display = \"none\";\n        this.checkButton.style.display = \"none\";\n        alert(`You guessed ${this.correctGuesses} out of ${this.words.length} words correctly!`);\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const words = [\n        {\n            word: \"addition\",\n            hint: \"The process of adding numbers\"\n        },\n        {\n            word: \"meeting\",\n            hint: \"Event in which people come together\"\n        },\n        {\n            word: \"number\",\n            hint: \"Math symbol used for counting\"\n        },\n        {\n            word: \"exchange\",\n            hint: \"The act of trading\"\n        },\n        {\n            word: \"canvas\",\n            hint: \"Piece of fabric for oil painting\"\n        },\n        {\n            word: \"garden\",\n            hint: \"Space for planting flower and plant\"\n        },\n        {\n            word: \"position\",\n            hint: \"Location of someone or something\"\n        },\n        {\n            word: \"feather\",\n            hint: \"Hair-like outer covering of bird\"\n        },\n        {\n            word: \"comfort\",\n            hint: \"A pleasant feeling of relaxation\"\n        },\n        {\n            word: \"tongue\",\n            hint: \"The muscular organ of mouth\"\n        },\n        {\n            word: \"expansion\",\n            hint: \"The process of increase or grow\"\n        },\n        {\n            word: \"country\",\n            hint: \"A politically identified region\"\n        },\n        {\n            word: \"group\",\n            hint: \"A number of objects or persons\"\n        },\n        {\n            word: \"taste\",\n            hint: \"Ability of tongue to detect flavour\"\n        },\n        {\n            word: \"store\",\n            hint: \"Large shop where goods are traded\"\n        },\n        {\n            word: \"field\",\n            hint: \"Area of land for farming activities\"\n        },\n        {\n            word: \"friend\",\n            hint: \"Person other than a family member\"\n        },\n        {\n            word: \"pocket\",\n            hint: \"A bag for carrying small items\"\n        },\n        {\n            word: \"needle\",\n            hint: \"A thin and sharp metal pin\"\n        },\n        {\n            word: \"expert\",\n            hint: \"Person with extensive knowledge\"\n        },\n        {\n            word: \"statement\",\n            hint: \"A declaration of something\"\n        },\n        {\n            word: \"second\",\n            hint: \"One-sixtieth of a minute\"\n        },\n        {\n            word: \"library\",\n            hint: \"Place containing a collection of books\"\n        }\n    ];\n    new $ecc5528c38753e51$var$WordScrambleGame(words);\n});\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const checkAnswersButton = document.querySelector(\".fill-in__check\");\n    const feedbackMessage = document.querySelector(\".fill-in__feedback\");\n    checkAnswersButton.addEventListener(\"click\", ()=>{\n        const wordInputs = document.querySelectorAll(\".sentence__input\");\n        let correctCount = 0;\n        wordInputs.forEach((input)=>{\n            const userAnswer = input.value.trim().toLowerCase();\n            const correctAnswer = input.dataset.answer.toLowerCase();\n            if (userAnswer === correctAnswer) {\n                input.style.borderColor = \"green\";\n                correctCount++;\n            } else input.style.borderColor = \"red\";\n        });\n        feedbackMessage.textContent = `You got ${correctCount} out of ${wordInputs.length} correct!`;\n    });\n});\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const cardsArray = [\n        {\n            word: \"happy\",\n            match: \"joyful\"\n        },\n        {\n            word: \"big\",\n            match: \"large\"\n        },\n        {\n            word: \"small\",\n            match: \"tiny\"\n        },\n        {\n            word: \"fast\",\n            match: \"quick\"\n        },\n        {\n            word: \"angry\",\n            match: \"furious\"\n        },\n        {\n            word: \"dark\",\n            match: \"shadowy\"\n        }\n    ];\n    let gameArray = [\n        ...cardsArray,\n        ...cardsArray.map((card)=>({\n                word: card.match,\n                match: card.word\n            }))\n    ];\n    gameArray = gameArray.sort(()=>0.5 - Math.random());\n    const gameBoard = document.querySelector(\".game__board\");\n    const resetButton = document.querySelector(\".game__reset-button\");\n    let firstCard = null;\n    let secondCard = null;\n    let lockBoard = false;\n    gameArray.forEach((item)=>{\n        const card = document.createElement(\"div\");\n        card.classList.add(\"game__card\");\n        card.dataset.word = item.word;\n        card.dataset.match = item.match;\n        card.textContent = item.word;\n        gameBoard.appendChild(card);\n        card.addEventListener(\"click\", ()=>{\n            if (lockBoard) return;\n            if (card === firstCard) return;\n            card.classList.add(\"game__card--flipped\");\n            if (!firstCard) {\n                firstCard = card;\n                return;\n            }\n            secondCard = card;\n            lockBoard = true;\n            checkForMatch();\n        });\n    });\n    function checkForMatch() {\n        const isMatch = firstCard.dataset.match === secondCard.dataset.word;\n        isMatch ? disableCards() : unflipCards();\n    }\n    function disableCards() {\n        firstCard.classList.add(\"game__card--matched\");\n        secondCard.classList.add(\"game__card--matched\");\n        resetBoard();\n    }\n    function unflipCards() {\n        setTimeout(()=>{\n            firstCard.classList.remove(\"game__card--flipped\");\n            secondCard.classList.remove(\"game__card--flipped\");\n            resetBoard();\n        }, 1000);\n    }\n    function resetBoard() {\n        [firstCard, secondCard, lockBoard] = [\n            null,\n            null,\n            false\n        ];\n    }\n    resetButton.addEventListener(\"click\", ()=>{\n        gameArray = [\n            ...cardsArray,\n            ...cardsArray.map((card)=>({\n                    word: card.match,\n                    match: card.word\n                }))\n        ];\n        gameArray = gameArray.sort(()=>0.5 - Math.random());\n        gameBoard.innerHTML = \"\";\n        gameArray.forEach((item)=>{\n            const card = document.createElement(\"div\");\n            card.classList.add(\"game__card\");\n            card.dataset.word = item.word;\n            card.dataset.match = item.match;\n            card.textContent = item.word;\n            gameBoard.appendChild(card);\n            card.addEventListener(\"click\", ()=>{\n                if (lockBoard) return;\n                if (card === firstCard) return;\n                card.classList.add(\"game__card--flipped\");\n                if (!firstCard) {\n                    firstCard = card;\n                    return;\n                }\n                secondCard = card;\n                lockBoard = true;\n                checkForMatch();\n            });\n        });\n    });\n});\n\n\nconst $46ea9b0226df40d2$var$guessClueText = document.querySelector(\".guess-clue-text\");\nconst $46ea9b0226df40d2$var$guessInput = document.querySelector(\".guess-input\");\nconst $46ea9b0226df40d2$var$guessButton = document.querySelector(\".guess-button\");\nconst $46ea9b0226df40d2$var$guessFeedback = document.querySelector(\".guess-feedback\");\nconst $46ea9b0226df40d2$var$guessScoreValue = document.querySelector(\".guess-score-value\");\nconst $46ea9b0226df40d2$var$words = [\n    {\n        word: \"apple\",\n        clue: \"A type of fruit that is often red or green.\"\n    },\n    {\n        word: \"elephant\",\n        clue: \"A large animal with a trunk and tusks.\"\n    },\n    {\n        word: \"pyramid\",\n        clue: \"A massive structure with a square base and triangular sides.\"\n    }\n];\nlet $46ea9b0226df40d2$var$currentWordIndex = 0;\nlet $46ea9b0226df40d2$var$score = 0;\nfunction $46ea9b0226df40d2$var$displayClue() {\n    const currentWord = $46ea9b0226df40d2$var$words[$46ea9b0226df40d2$var$currentWordIndex];\n    $46ea9b0226df40d2$var$guessClueText.textContent = currentWord.clue;\n}\nfunction $46ea9b0226df40d2$var$checkGuess() {\n    const userGuess = $46ea9b0226df40d2$var$guessInput.value.trim().toLowerCase();\n    const correctWord = $46ea9b0226df40d2$var$words[$46ea9b0226df40d2$var$currentWordIndex].word;\n    if (userGuess === correctWord) {\n        $46ea9b0226df40d2$var$guessFeedback.textContent = \"Correct! Well done.\";\n        $46ea9b0226df40d2$var$score++;\n        $46ea9b0226df40d2$var$guessScoreValue.textContent = $46ea9b0226df40d2$var$score;\n    } else $46ea9b0226df40d2$var$guessFeedback.textContent = `Wrong! The correct word was \"${correctWord}\".`;\n    $46ea9b0226df40d2$var$guessInput.value = \"\";\n    $46ea9b0226df40d2$var$currentWordIndex = ($46ea9b0226df40d2$var$currentWordIndex + 1) % $46ea9b0226df40d2$var$words.length;\n    $46ea9b0226df40d2$var$displayClue();\n}\n$46ea9b0226df40d2$var$guessButton.addEventListener(\"click\", $46ea9b0226df40d2$var$checkGuess);\n$46ea9b0226df40d2$var$displayClue();\n\n\nconst $16686b3b6b3d807d$var$lessonModal = document.querySelector(\".lesson-modal\");\nconst $16686b3b6b3d807d$var$courseModal = document.querySelector(\".course-modal\");\nconst $16686b3b6b3d807d$var$lessonBtn = document.querySelector(\".lesson-registration__btn\");\nconst $16686b3b6b3d807d$var$courseBtn = document.querySelector(\".course-registration__btn\");\nconst $16686b3b6b3d807d$var$lessonCloseBtn = document.querySelector(\".lesson-modal__close\");\nconst $16686b3b6b3d807d$var$courseCloseBtn = document.querySelector(\".course-modal__close\");\n$16686b3b6b3d807d$var$lessonBtn.addEventListener(\"click\", ()=>{\n    $16686b3b6b3d807d$var$lessonModal.style.display = \"block\";\n});\n$16686b3b6b3d807d$var$courseBtn.addEventListener(\"click\", ()=>{\n    $16686b3b6b3d807d$var$courseModal.style.display = \"block\";\n});\n$16686b3b6b3d807d$var$lessonCloseBtn.addEventListener(\"click\", ()=>{\n    $16686b3b6b3d807d$var$lessonModal.style.display = \"none\";\n});\n$16686b3b6b3d807d$var$courseCloseBtn.addEventListener(\"click\", ()=>{\n    $16686b3b6b3d807d$var$courseModal.style.display = \"none\";\n});\nwindow.addEventListener(\"click\", (event)=>{\n    if (event.target.classList.contains(\"lesson-modal\")) $16686b3b6b3d807d$var$lessonModal.style.display = \"none\";\n    else if (event.target.classList.contains(\"course-modal\")) $16686b3b6b3d807d$var$courseModal.style.display = \"none\";\n});\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const modal = document.getElementById(\"thankYouModal\");\n    const closeBtn = document.querySelector(\".modal-close\");\n    function showModal() {\n        modal.classList.add(\"show\");\n    }\n    function closeModal() {\n        modal.classList.remove(\"show\");\n    }\n    document.querySelector(\".newsletter form\").addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        showModal();\n    });\n    closeBtn.addEventListener(\"click\", closeModal);\n    window.addEventListener(\"click\", function(e) {\n        if (e.target === modal) closeModal();\n    });\n});\n\n\n\n\n//# sourceMappingURL=index.f78022e8.js.map\n","import \"./js/header\";\r\nimport \"./js/quiz\";\r\nimport \"./js/word-scramble\";\r\nimport \"./js/fill-in\";\r\nimport \"./js/match\";\r\nimport \"./js/guess\";\r\nimport \"./js/registration\";\r\nimport \"./js/footer\";\r\n","document.addEventListener(\"DOMContentLoaded\", function () {\r\n  const menuIcon = document.querySelector(\".header-menu-icon\");\r\n  const headerList = document.querySelector(\".header-list\");\r\n\r\n  menuIcon.addEventListener(\"click\", function () {\r\n    menuIcon.classList.toggle(\"active\");\r\n    headerList.classList.toggle(\"active\");\r\n  });\r\n});\r\n","const checkBtn = document.querySelector(\".submit-btn\");\r\nconst resultElement = document.querySelector(\".result\");\r\n\r\ncheckBtn.addEventListener(\"click\", function () {\r\n  const answers = document.querySelectorAll(\r\n    '.answers input[type=\"radio\"]:checked'\r\n  );\r\n\r\n  let score = 0;\r\n\r\n  const correctAnswers = [\"a\", \"b\", \"a\", \"b\", \"b\", \"b\"];\r\n\r\n  answers.forEach((answer, index) => {\r\n    if (answer.value === correctAnswers[index]) {\r\n      score++;\r\n    }\r\n  });\r\n\r\n  resultElement.textContent = `You scored ${score} out of 6 points!`;\r\n\r\n  if (score === 6) {\r\n    resultElement.style.color = \"green\";\r\n  } else if (score >= 4) {\r\n    resultElement.style.color = \"orange\";\r\n  } else {\r\n    resultElement.style.color = \"red\";\r\n  }\r\n});\r\n","class WordScrambleGame {\r\n  constructor(words) {\r\n    this.words = words;\r\n    this.currentWordIndex = 0;\r\n    this.correctGuesses = 0;\r\n    this.scrambledWordElement = document.querySelector(\".word-scramble__word\");\r\n    this.hintElement = document.querySelector(\".word-scramble__hint span\");\r\n    this.guessInputElement = document.querySelector(\".word-scramble__input\");\r\n    this.scoreElement = document.querySelector(\".word-scramble__score\");\r\n    this.refreshButton = document.querySelector(\".refresh-word\");\r\n    this.checkButton = document.querySelector(\".check-word\");\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.refreshButton.addEventListener(\"click\", () => this.refreshWord());\r\n    this.checkButton.addEventListener(\"click\", () => this.checkGuess());\r\n\r\n    this.nextWord();\r\n  }\r\n\r\n  scrambleWord(word) {\r\n    return word\r\n      .split(\"\")\r\n      .sort(() => 0.5 - Math.random())\r\n      .join(\"\");\r\n  }\r\n\r\n  nextWord() {\r\n    if (this.currentWordIndex >= this.words.length) {\r\n      this.showFinalScore();\r\n      return;\r\n    }\r\n\r\n    const current = this.words[this.currentWordIndex];\r\n    this.scrambledWordElement.textContent = this.scrambleWord(current.word);\r\n    this.hintElement.textContent = current.hint;\r\n    this.guessInputElement.value = \"\";\r\n    this.currentWordIndex++;\r\n  }\r\n\r\n  refreshWord() {\r\n    const current = this.words[this.currentWordIndex - 1];\r\n    this.scrambledWordElement.textContent = this.scrambleWord(current.word);\r\n    this.guessInputElement.value = \"\";\r\n  }\r\n\r\n  checkGuess() {\r\n    const guess = this.guessInputElement.value.trim().toLowerCase();\r\n    const currentWord =\r\n      this.words[this.currentWordIndex - 1].word.toLowerCase();\r\n\r\n    if (guess === currentWord) {\r\n      this.correctGuesses++;\r\n      this.displayMessage(\"Correct!\", true);\r\n    } else {\r\n      this.displayMessage(\r\n        `Wrong! The correct word was \"${currentWord}\".`,\r\n        false\r\n      );\r\n    }\r\n\r\n    this.updateScore();\r\n    this.nextWord();\r\n  }\r\n\r\n  updateScore() {\r\n    this.scoreElement.textContent = this.correctGuesses;\r\n  }\r\n\r\n  displayMessage(message, isCorrect) {\r\n    if (isCorrect) {\r\n      alert(message);\r\n    } else {\r\n      alert(message);\r\n    }\r\n  }\r\n\r\n  showFinalScore() {\r\n    this.scrambledWordElement.textContent = \"Game Over!\";\r\n    this.hintElement.textContent = \"\";\r\n    this.guessInputElement.style.display = \"none\";\r\n    this.refreshButton.style.display = \"none\";\r\n    this.checkButton.style.display = \"none\";\r\n    alert(\r\n      `You guessed ${this.correctGuesses} out of ${this.words.length} words correctly!`\r\n    );\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const words = [\r\n    {\r\n      word: \"addition\",\r\n      hint: \"The process of adding numbers\",\r\n    },\r\n    {\r\n      word: \"meeting\",\r\n      hint: \"Event in which people come together\",\r\n    },\r\n    {\r\n      word: \"number\",\r\n      hint: \"Math symbol used for counting\",\r\n    },\r\n    {\r\n      word: \"exchange\",\r\n      hint: \"The act of trading\",\r\n    },\r\n    {\r\n      word: \"canvas\",\r\n      hint: \"Piece of fabric for oil painting\",\r\n    },\r\n    {\r\n      word: \"garden\",\r\n      hint: \"Space for planting flower and plant\",\r\n    },\r\n    {\r\n      word: \"position\",\r\n      hint: \"Location of someone or something\",\r\n    },\r\n    {\r\n      word: \"feather\",\r\n      hint: \"Hair-like outer covering of bird\",\r\n    },\r\n    {\r\n      word: \"comfort\",\r\n      hint: \"A pleasant feeling of relaxation\",\r\n    },\r\n    {\r\n      word: \"tongue\",\r\n      hint: \"The muscular organ of mouth\",\r\n    },\r\n    {\r\n      word: \"expansion\",\r\n      hint: \"The process of increase or grow\",\r\n    },\r\n    {\r\n      word: \"country\",\r\n      hint: \"A politically identified region\",\r\n    },\r\n    {\r\n      word: \"group\",\r\n      hint: \"A number of objects or persons\",\r\n    },\r\n    {\r\n      word: \"taste\",\r\n      hint: \"Ability of tongue to detect flavour\",\r\n    },\r\n    {\r\n      word: \"store\",\r\n      hint: \"Large shop where goods are traded\",\r\n    },\r\n    {\r\n      word: \"field\",\r\n      hint: \"Area of land for farming activities\",\r\n    },\r\n    {\r\n      word: \"friend\",\r\n      hint: \"Person other than a family member\",\r\n    },\r\n    {\r\n      word: \"pocket\",\r\n      hint: \"A bag for carrying small items\",\r\n    },\r\n    {\r\n      word: \"needle\",\r\n      hint: \"A thin and sharp metal pin\",\r\n    },\r\n    {\r\n      word: \"expert\",\r\n      hint: \"Person with extensive knowledge\",\r\n    },\r\n    {\r\n      word: \"statement\",\r\n      hint: \"A declaration of something\",\r\n    },\r\n    {\r\n      word: \"second\",\r\n      hint: \"One-sixtieth of a minute\",\r\n    },\r\n    {\r\n      word: \"library\",\r\n      hint: \"Place containing a collection of books\",\r\n    },\r\n  ];\r\n\r\n  new WordScrambleGame(words);\r\n});\r\n","document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const checkAnswersButton = document.querySelector(\".fill-in__check\");\r\n  const feedbackMessage = document.querySelector(\".fill-in__feedback\");\r\n\r\n  checkAnswersButton.addEventListener(\"click\", () => {\r\n    const wordInputs = document.querySelectorAll(\".sentence__input\");\r\n    let correctCount = 0;\r\n\r\n    wordInputs.forEach((input) => {\r\n      const userAnswer = input.value.trim().toLowerCase();\r\n      const correctAnswer = input.dataset.answer.toLowerCase();\r\n\r\n      if (userAnswer === correctAnswer) {\r\n        input.style.borderColor = \"green\";\r\n        correctCount++;\r\n      } else {\r\n        input.style.borderColor = \"red\";\r\n      }\r\n    });\r\n\r\n    feedbackMessage.textContent = `You got ${correctCount} out of ${wordInputs.length} correct!`;\r\n  });\r\n});\r\n","document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const cardsArray = [\r\n    { word: \"happy\", match: \"joyful\" },\r\n    { word: \"big\", match: \"large\" },\r\n    { word: \"small\", match: \"tiny\" },\r\n    { word: \"fast\", match: \"quick\" },\r\n    { word: \"angry\", match: \"furious\" },\r\n    { word: \"dark\", match: \"shadowy\" },\r\n  ];\r\n\r\n  let gameArray = [\r\n    ...cardsArray,\r\n    ...cardsArray.map((card) => ({ word: card.match, match: card.word })),\r\n  ];\r\n  gameArray = gameArray.sort(() => 0.5 - Math.random());\r\n\r\n  const gameBoard = document.querySelector(\".game__board\");\r\n  const resetButton = document.querySelector(\".game__reset-button\");\r\n\r\n  let firstCard = null;\r\n  let secondCard = null;\r\n  let lockBoard = false;\r\n\r\n  gameArray.forEach((item) => {\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\"game__card\");\r\n    card.dataset.word = item.word;\r\n    card.dataset.match = item.match;\r\n    card.textContent = item.word;\r\n\r\n    gameBoard.appendChild(card);\r\n\r\n    card.addEventListener(\"click\", () => {\r\n      if (lockBoard) return;\r\n      if (card === firstCard) return;\r\n\r\n      card.classList.add(\"game__card--flipped\");\r\n\r\n      if (!firstCard) {\r\n        firstCard = card;\r\n        return;\r\n      }\r\n\r\n      secondCard = card;\r\n      lockBoard = true;\r\n\r\n      checkForMatch();\r\n    });\r\n  });\r\n\r\n  function checkForMatch() {\r\n    const isMatch = firstCard.dataset.match === secondCard.dataset.word;\r\n\r\n    isMatch ? disableCards() : unflipCards();\r\n  }\r\n\r\n  function disableCards() {\r\n    firstCard.classList.add(\"game__card--matched\");\r\n    secondCard.classList.add(\"game__card--matched\");\r\n\r\n    resetBoard();\r\n  }\r\n\r\n  function unflipCards() {\r\n    setTimeout(() => {\r\n      firstCard.classList.remove(\"game__card--flipped\");\r\n      secondCard.classList.remove(\"game__card--flipped\");\r\n\r\n      resetBoard();\r\n    }, 1000);\r\n  }\r\n\r\n  function resetBoard() {\r\n    [firstCard, secondCard, lockBoard] = [null, null, false];\r\n  }\r\n\r\n  resetButton.addEventListener(\"click\", () => {\r\n    gameArray = [\r\n      ...cardsArray,\r\n      ...cardsArray.map((card) => ({ word: card.match, match: card.word })),\r\n    ];\r\n    gameArray = gameArray.sort(() => 0.5 - Math.random());\r\n\r\n    gameBoard.innerHTML = \"\";\r\n\r\n    gameArray.forEach((item) => {\r\n      const card = document.createElement(\"div\");\r\n      card.classList.add(\"game__card\");\r\n      card.dataset.word = item.word;\r\n      card.dataset.match = item.match;\r\n      card.textContent = item.word;\r\n\r\n      gameBoard.appendChild(card);\r\n\r\n      card.addEventListener(\"click\", () => {\r\n        if (lockBoard) return;\r\n        if (card === firstCard) return;\r\n\r\n        card.classList.add(\"game__card--flipped\");\r\n\r\n        if (!firstCard) {\r\n          firstCard = card;\r\n          return;\r\n        }\r\n\r\n        secondCard = card;\r\n        lockBoard = true;\r\n\r\n        checkForMatch();\r\n      });\r\n    });\r\n  });\r\n});\r\n","const guessClueText = document.querySelector(\".guess-clue-text\");\r\nconst guessInput = document.querySelector(\".guess-input\");\r\nconst guessButton = document.querySelector(\".guess-button\");\r\nconst guessFeedback = document.querySelector(\".guess-feedback\");\r\nconst guessScoreValue = document.querySelector(\".guess-score-value\");\r\n\r\nconst words = [\r\n  { word: \"apple\", clue: \"A type of fruit that is often red or green.\" },\r\n  { word: \"elephant\", clue: \"A large animal with a trunk and tusks.\" },\r\n  {\r\n    word: \"pyramid\",\r\n    clue: \"A massive structure with a square base and triangular sides.\",\r\n  },\r\n];\r\n\r\nlet currentWordIndex = 0;\r\nlet score = 0;\r\n\r\nfunction displayClue() {\r\n  const currentWord = words[currentWordIndex];\r\n  guessClueText.textContent = currentWord.clue;\r\n}\r\n\r\nfunction checkGuess() {\r\n  const userGuess = guessInput.value.trim().toLowerCase();\r\n  const correctWord = words[currentWordIndex].word;\r\n\r\n  if (userGuess === correctWord) {\r\n    guessFeedback.textContent = \"Correct! Well done.\";\r\n    score++;\r\n    guessScoreValue.textContent = score;\r\n  } else {\r\n    guessFeedback.textContent = `Wrong! The correct word was \"${correctWord}\".`;\r\n  }\r\n\r\n  guessInput.value = \"\";\r\n  currentWordIndex = (currentWordIndex + 1) % words.length;\r\n  displayClue();\r\n}\r\n\r\nguessButton.addEventListener(\"click\", checkGuess);\r\n\r\ndisplayClue();\r\n","const lessonModal = document.querySelector(\".lesson-modal\");\r\nconst courseModal = document.querySelector(\".course-modal\");\r\nconst lessonBtn = document.querySelector(\".lesson-registration__btn\");\r\nconst courseBtn = document.querySelector(\".course-registration__btn\");\r\nconst lessonCloseBtn = document.querySelector(\".lesson-modal__close\");\r\nconst courseCloseBtn = document.querySelector(\".course-modal__close\");\r\n\r\nlessonBtn.addEventListener(\"click\", () => {\r\n  lessonModal.style.display = \"block\";\r\n});\r\n\r\ncourseBtn.addEventListener(\"click\", () => {\r\n  courseModal.style.display = \"block\";\r\n});\r\n\r\nlessonCloseBtn.addEventListener(\"click\", () => {\r\n  lessonModal.style.display = \"none\";\r\n});\r\n\r\ncourseCloseBtn.addEventListener(\"click\", () => {\r\n  courseModal.style.display = \"none\";\r\n});\r\n\r\nwindow.addEventListener(\"click\", (event) => {\r\n  if (event.target.classList.contains(\"lesson-modal\")) {\r\n    lessonModal.style.display = \"none\";\r\n  } else if (event.target.classList.contains(\"course-modal\")) {\r\n    courseModal.style.display = \"none\";\r\n  }\r\n});\r\n","document.addEventListener(\"DOMContentLoaded\", function () {\r\n  const modal = document.getElementById(\"thankYouModal\");\r\n  const closeBtn = document.querySelector(\".modal-close\");\r\n\r\n  function showModal() {\r\n    modal.classList.add(\"show\");\r\n  }\r\n\r\n  function closeModal() {\r\n    modal.classList.remove(\"show\");\r\n  }\r\n\r\n  document\r\n    .querySelector(\".newsletter form\")\r\n    .addEventListener(\"submit\", function (e) {\r\n      e.preventDefault();\r\n      showModal();\r\n    });\r\n\r\n  closeBtn.addEventListener(\"click\", closeModal);\r\n\r\n  window.addEventListener(\"click\", function (e) {\r\n    if (e.target === modal) {\r\n      closeModal();\r\n    }\r\n  });\r\n});\r\n"],"names":["document","addEventListener","menuIcon","querySelector","headerList","classList","toggle","$13146f66d2c488bd$var$checkBtn","$13146f66d2c488bd$var$resultElement","answers","querySelectorAll","score","correctAnswers","forEach","answer","index","value","textContent","style","color","$ecc5528c38753e51$var$WordScrambleGame","constructor","words","currentWordIndex","correctGuesses","scrambledWordElement","hintElement","guessInputElement","scoreElement","refreshButton","checkButton","init","refreshWord","checkGuess","nextWord","scrambleWord","word","split","sort","Math","random","join","length","showFinalScore","current","hint","guess","trim","toLowerCase","currentWord","displayMessage","updateScore","message","isCorrect","alert","display","checkAnswersButton","feedbackMessage","wordInputs","correctCount","input","userAnswer","dataset","borderColor","cardsArray","match","gameArray","map","card","gameBoard","resetButton","firstCard","secondCard","lockBoard","checkForMatch","isMatch","add","resetBoard","setTimeout","remove","item","createElement","appendChild","innerHTML","$46ea9b0226df40d2$var$guessClueText","$46ea9b0226df40d2$var$guessInput","$46ea9b0226df40d2$var$guessButton","$46ea9b0226df40d2$var$guessFeedback","$46ea9b0226df40d2$var$guessScoreValue","$46ea9b0226df40d2$var$words","clue","$46ea9b0226df40d2$var$currentWordIndex","$46ea9b0226df40d2$var$score","$46ea9b0226df40d2$var$displayClue","userGuess","correctWord","$16686b3b6b3d807d$var$lessonModal","$16686b3b6b3d807d$var$courseModal","$16686b3b6b3d807d$var$lessonBtn","$16686b3b6b3d807d$var$courseBtn","$16686b3b6b3d807d$var$lessonCloseBtn","$16686b3b6b3d807d$var$courseCloseBtn","window","event","target","contains","modal","getElementById","closeBtn","closeModal","e","preventDefault"],"version":3,"file":"index.f78022e8.js.map"}